const { google } = require("googleapis");
const { OAuth2 } = google.auth;

function createOAuth2Client(accessToken) {
    const oAuth2Client = new OAuth2(
        process.env.GOOGLE_CLIENT_ID,
        process.env.GOOGLE_CLIENT_SECRET,
        "http://localhost:8000/auth/google/callback"
    );

    if (accessToken) {
        oAuth2Client.setCredentials({
            access_token: accessToken,
        });
    } else {
        throw new Error('No access token or refresh token found');
    }

    return oAuth2Client;
}

async function createEvent(auth, eventDetails) {
    const calendar = google.calendar({ version: 'v3', auth });

    const event = {
        summary: 'Reminder',            // Event title
        location: 'NITW Campus',          // Event location
        description: 'This is an reminder generated by NITW Nexus through Google Calendar.',    // Event description
        start: {
            dateTime: eventDetails.startDateTime,   // Start time in ISO format
            timeZone: 'Asia/Kolkata',        // Time zone of the event
        },
        end: {
            dateTime: eventDetails.endDateTime,     // End time in ISO format
            timeZone: 'Asia/Kolkata',        // Time zone of the event
        },
        attendees: [{ email: eventDetails.email }],  
        reminders: {
            useDefault: false,                       
            overrides: [
                { method: 'email', minutes: 60 }, // Email reminder 1 hour before
                { method: 'popup', minutes: 10 },      // Popup reminder 10 minutes before
            ],
        },
    };

    try {
        const response = await calendar.events.insert({
            auth: auth,
            calendarId: 'primary',  // Use primary calendar
            resource: event,
        });
        return response.data;
    } catch (error) {
        throw error;
    }
}

module.exports = {
    createOAuth2Client, createEvent
};
